#############################################################
#			Kubernetes Engine_Qwik Start	    #	
#############################################################


#Your compute zone is an approximate regional location in which your clusters and their resources live
#To set your default compute zone, start a new session in Cloud Shell, and run the following command

gcloud config set compute/zone <paste zone>

#Ex:

gcloud config set compute/zone us-central1-a



#A cluster consists of at least one cluster master machine and multiple worker machines called nodes. 
#Nodes are Compute Engine virtual machine (VM) instances that run the Kubernetes processes necessary to make them part of the cluster.
#Cluster names must start with a letter and end with an alphanumeric, and cannot be longer than 40 characters.
#To create a cluster, run the following command, replacing [CLUSTER-NAME] with the name you choose for the cluster (for example:my-cluster).


gcloud container clusters create [CLUSTER-NAME]


#After creating your cluster, you need authentication credentials to interact with it.
#To authenticate the cluster, run the following command, replacing [CLUSTER-NAME] with the name of your cluster:


gcloud container clusters get-credentials [CLUSTER-NAME]


#You can now deploy a containerized application to the cluster. For this example, you'll run hello-app in your cluster.
#GKE uses Kubernetes objects to create and manage your cluster's resources. Kubernetes provides the Deployment object for deploying stateless applications like web servers. 
#Service objects define rules and load balancing for accessing your application from the internet.
#To create a new Deployment hello-server from the hello-app container image, run the following kubectl create command


kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0


#This Kubernetes command creates a Deployment object that represents hello-server. In this case, --image specifies a container image to deploy. 
#The command pulls the example image from a Container Registry bucket. gcr.io/google-samples/hello-app:1.0 indicates the specific image version to pull. 
#If a version is not specified, the latest version is used.

#To create a Kubernetes Service, which is a Kubernetes resource that lets you expose your application to external traffic, run the following kubectl expose command


kubectl expose deployment hello-server --type=LoadBalancer --port 8080

#In this command
#--port specifies the port that the container exposes.
#type="LoadBalancer" creates a Compute Engine load balancer for your container

#To inspect the hello-server Service, run kubectl get

kubectl get service


#To view the application from your web browser, open a new tab and enter the following address, replacing [EXTERNAL IP] with the EXTERNAL-IP for hello-server.


http://[EXTERNAL-IP]:8080

#To delete the cluster, run the following command

gcloud container clusters delete [CLUSTER-NAME]


#Deleting the cluster can take a few minutes